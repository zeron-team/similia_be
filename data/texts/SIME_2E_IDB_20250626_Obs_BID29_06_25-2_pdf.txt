sime documentación funcional técnica completa para siempre sistema sime fecha 26 de junio de 2025 presentado por renzo antonioli analista funcional tecnico dev rantonioli zeron com ar 54 11 3566 5266 1 1 visión objetivos 4 1 1 propósito estratégico 4 1 2 objetivos específicos 4 1 3 principios rectores 4 1 4 actores beneficios 4 2 arquitectura de alto nivel 5 2 1 capas funcionales 5 2 2 vista lógica doble perspectiva 5 2 2 1 vista conceptual 5 2 2 2 vista lógica detallada 6 2 3 principios arquitectónicos 8 2 4 flujos de datos representativos 8 2 5 escenarios de resiliencia y escalabilidad 8 3 catálogo de módulos 9 4 detalle individual de módulos 10 4 1 identidad roles auth 10 1 objetivo 10 2 funcionalidades 10 3 componentes internos 10 4 dependencias 10 5 casos de uso prioritarios 11 6 flujo principal au 02 11 7 interfaz de usuario 6 pantallas 11 4 2 catálogos maestros cats 11 1 objetivo 11 2 funcionalidades 12 3 componentes internos 12 4 dependencias 12 5 casos de uso prioritarios 12 6 flujo bulk import c 02 12 7 interfaz de usuario 5 pantallas 12 4 3 programas prog 13 1 objetivo 13 2 funcionalidades 13 3 componentes internos 13 4 dependencias 13 5 casos de uso prioritarios 13 6 flujo p 01 wizard 4 pasos 13 7 interfaz de usuario 8 pantallas 14 cambios clave en ui 14 4 4 matriz de indicadores ind 15 1 objetivo 15 2 funcionalidades 16 3 componentes internos 16 4 dependencias 16 5 casos de uso prioritarios 16 6 flujo i 02 16 7 interfaz de usuario 7 pantallas 16 4 5 evaluación agenda de mejoras eval 17 1 objetivo 17 2 funcionalidades 17 3 componentes internos 17 4 dependencias 17 5 casos de uso prioritarios 17 6 flujo kanban e 03 17 7 interfaz de usuario 6 pantallas 17 4 6 reportes dashboards rep 18 2 1 objetivo 18 2 funcionalidades 18 3 componentes internos 18 4 dependencias 18 5 casos de uso prioritarios 18 6 flujo r 02 scheduler 18 7 interfaz de usuario 8 pantallas 19 5 modelo de datos ddl completo 20 convenciones 20 5 1 módulo identidad roles 20 5 2 catálogos maestros 21 5 3 programas y prestaciones 22 5 3 1 esquema estándar 22 5 3 2 diseño de campos personalizados eav opcional 22 5 3 3 flujo de creación de campo 23 5 3 4 ventajas del modelo híbrido 23 5 4 indicadores y series 24 5 5 evaluaciones y mejoras 25 5 6 reportes y dashboards 26 5 7 índices vistas y otros artefactos 27 6 api rest v1 29 convenciones generales 29 6 1 esquema de seguridad 29 6 2 tags disponibles 29 6 3 endpoints clave 29 6 3 1 auth 29 6 3 2 catálogos 30 6 3 3 programas 30 6 3 4 indicadores 30 6 3 5 evaluaciones 31 6 3 6 reportes dashboards 31 6 4 componentes schemas 31 6 5 respuestas genéricas 32 6 6 versionado y compatibilidad 33 7 diagramas de flujo secuencia 34 7 1 login con mfa auth 34 7 2 alta de programa wizard 4 pasos 34 7 3 creación de campo personalizado 35 7 4 carga masiva de series 35 7 5 generación de alerta de meta incumplida 35 7 6 proceso de evaluación y cierre de acción 35 7 7 creación y compartición de dashboard 36 7 8 scheduler de reporte programado 36 8 seguridad auditoría cumplimiento 38 8 1 autenticación y gestión de identidades 38 8 2 autorización y control de acceso 38 8 3 cifrado y protección de datos 38 8 4 monitorización logging y auditoría 38 8 5 respaldo y recuperación ante desastre 39 8 6 devsecops y gestión de vulnerabilidades 39 8 7 cumplimiento legal privacidad 39 3 1 visión objetivos 1 1 propósito estratégico el sistema de monitoreo y evaluación sime se concibe como el núcleo de evidencia para la toma de decisiones públicas no sólo consolida indicadores y reportes articula la gestión por resultados desde el diseño hasta la mejora continua 1 2 objetivos específicos 1 monitorear resultados en tiempo casi real y comparar contra metas 2 evaluar impacto y eficiencia mediante metodologías rigurosas 3 gestionar planes de mejora con responsables y plazos claros 4 transparentar el avance a autoridades organismos de control 5 aprender institucionalmente para iterar políticas futuras 1 3 principios rectores principio aplicación práctica interoperabilidad apis rest y eventos estándar integración con dw ministerial no hard coding catálogos administrables y campos personalizados dinámicos gobernanza de datos linaje políticas de calidad y roles de dato definidos seguridad by design controles integrados en cada capa cifrado y auditoría usabilidad experiencias coherentes accesibles y orientadas a tareas escalabilidad arquitectura modular y resiliente a picos de carga 1 4 actores beneficios actor beneficio coordinador de programa visualiza kpis y reporta avance operador m e carga datos masivos y recibe alertas evaluador externo accede a información consolidada para estudios autoridad ministerial obtiene dashboards estratégicos para decisiones visión convertir a sime en la referencia nacional para políticas públicas basadas en evidencia fomentando agilidad transparencia y mejora continua en toda la administración sime es la plataforma oficial que monitorea evalúa y mejora programas públicos a partir de la evidencia objetivos clave seguimiento de indicadores evaluación de impacto agenda de mejoras y rendición de cuentas transparente 4 2 arquitectura de alto nivel la arquitectura del sime se concibe como un sistema multicapa orientado a dominios organizado para separar responsabilidades facilitar la evolución independiente de cada módulo y asegurar la gobernanza de la información 2 1 capas funcionales capa responsabilidad esencial presentación interacción con usuarios captura de datos visualización de indicadores construcción de reportes servicios de orquestación de los casos de uso control de transacciones y aplicación exposición de contratos externos api eventos contextos de implementación de reglas de negocio específicas identidad dominio catálogos programas indicadores evaluación reportes gestión de datos persistencia estructurada relacional y no estructurada archivos versionado auditoría y backups servicios autenticación autorización mensajería event bus registro de transversales métricas bitácora de auditoría planificación de tareas integración intercambio con data warehouse institucional sistemas de externa visualización corporativos y otros entes ministeriales 2 2 vista lógica doble perspectiva para facilitar la comprensión tanto de públicos no técnicos como de equipos de sistemas se presentan dos niveles de abstracción 2 2 1 vista conceptual graph lr user usuarios operadores coordinadores autoridades sime sime plataforma cat catálogos prog programas ind matriz indicadores eval evaluación mejora dash reportes dashboards dw padrones data warehouse pub ciudadanía toma de decisiones user interacción web sime sime cat sime prog sime ind sime eval sime dash ind cruce de datos dw dash pub 5 cómo leerla el rectángulo central agrupa todos los servicios de la plataforma flechas señalan flujos principales entrada de datos análisis y publicación usuarios interactúan solo con la plataforma los componentes internos cooperan puertas adentro 2 2 2 vista lógica detallada leyenda de colores presentación servicios de aplicación contextos de dominio gestión de datos integración externa graph td nodos subgraph presentación fe cliente web bi end subgraph servicios de aplicación s auth servicio identidad s cat servicio catálogos s prog servicio programas s ind servicio indicadores s eval servicio evaluación s rep servicio reportes end subgraph contextos de dominio d auth dominio identidad d cat dominio catálogos d prog dominio programas d ind dominio indicadores d eval dominio evaluación d rep dominio reportes end subgraph gestión de datos db bd relacional obj almacén objetos log bitácora end subgraph integración externa dw data warehouse 6 bi plataforma bi corporativa end flujos fe solicitudes jwt s auth fe s cat fe s prog fe s ind fe s eval fe s rep s auth d auth s cat d cat s prog d prog s ind d ind s eval d eval s rep d rep d auth db d cat db d prog db d ind db d eval db d rep db d rep obj d auth log d prog log d ind padrones dw d rep embed exporta bi estilos classdef presentation fill fff4c3 stroke 333 classdef application fill cde8ff stroke 333 classdef domain fill d4f8d4 stroke 333 classdef data fill ffd5d1 stroke 333 classdef integration fill e8e8e8 stroke 333 class fe presentation class s auth s cat s prog s ind s eval s rep application class d auth d cat d prog d ind d eval d rep domain class db obj log data class dw bi integration la agrupación cromática deja claro presentación único punto de interacción con usuarios servicios de aplicación exponen casos de uso y orquestan dominios dominios implementan reglas de negocio y manipulan entidades gestión de datos persistencia estructurada objetos y bitácora 7 integración externa consumo y publicación de datos con sistemas ministeriales colores y agrupaciones representan las capas lógicas del sistema mostrando quién llama a quién y dónde se almacena cada tipo de dato 2 3 principios arquitectónicos 1 modularidad acoplada a dominios cada contexto es responsable de sus entidades y casos de uso las dependencias se gestionan a través de contratos estables 2 evolución independiente los contextos pueden escalar o desplegarse sin afectar los demás las migraciones de datos se orquestan mediante versionado 3 gobernanza de datos toda transformación queda registrada los linajes facilitan auditoría reproducibilidad de reportes y trazabilidad de indicadores 4 seguridad transversal autenticación centralizada control de acceso unificado y bitácora inmutable de eventos 5 observabilidad integrada métricas de rendimiento salud y uso son recolectadas y expuestas de forma homogénea para cada servicio 2 4 flujos de datos representativos carga de serie de indicadores un operador envía un lote servicios de aplicación de indicadores valida negocio dominio indicadores registra valores gestión de datos persiste evento serie cargada notifica a reportes para recalcular widgets generación de reporte programado planificador interno dispara tarea dominio reportes extrae datos genera archivo en almacén de objetos envía notificación a los destinatarios registra acción en bitácora sincronización con dw tarea nocturna consume padrones actualizados dominio indicadores recalcula coberturas nuevas métricas publicadas a dashboards 2 5 escenarios de resiliencia y escalabilidad alta disponibilidad mediante replicación de servicios y almacenamiento balanceo de carga en la capa de servicios de aplicación desacople temporal a través de colas eventos para procesos intensivos cálculo masivo generación de reportes evitando bloqueo de peticiones transaccionales versioning y migraciones seguras las evoluciones de esquema se aplican mediante migraciones controladas preservando el historial de datos y minimizando paros 8 3 catálogo de módulos módulo descripción corta principales entidades 1 administración autenticación usuario rol permiso usuario rol rol permiso a de usuarios mfa rbac udit log roles auditoría 2 catálogos abm de valores provincia tipo programa organismo tipo presta maestros de referencia cion frecuencia medicion provincias organismos 3 programas registro integral programa prestacion relevamiento de programas y sps prestaciones 4 matriz de catálogo metas indicador indicador programa serie indicador indicadores series de datos 5 evaluación estudios evaluacion recomendacion mejora seguimiento agenda de hallazgos mejoras acciones 6 reportes constructor reporte def programacion reporte dashboard dashboards visual scheduler widget dashboard permiso bi embed 9 4 detalle individual de módulos para cada módulo se incluye 1 objetivo estratégico valor que aporta al negocio 2 funcionalidades catálogo completo de capacidades 3 componentes internos bloques lógicos que implementan las funcionalidades 4 dependencias servicios o datos externos necesarios 5 casos de uso prioritarios tabla raise rol acción interacción sistema excepción 6 flujo principal diagrama textual paso a paso 7 interfaz de usuario pantallas cantidad propósito navegación 4 1 identidad roles auth 1 objetivo garantizar identidad confiable control de acceso basado en roles y trazabilidad completa de eventos de seguridad 2 funcionalidades alta edición suspensión y baja lógica de usuarios autenticación primaria usuario contraseña bcrypt y secundaria totp emisión refresco y revocación de tokens jwt access refresh administración de roles permisos granulares y herencia de roles detección de intentos de acceso indebido y bloqueo automático exportación de bitácora en formato cef json para siem corporativo 3 componentes internos componente responsabilidad datos manejados user manager crud políticas de contraseña usuario rbac engine resolución de permisos cache acl rol permiso rol permiso mfa service generación qr validación totp usuario mfa secret token issuer firmado blacklist de tokens audit trail persistencia eventos audit log audit log 4 dependencias base de datos principal servicio de correo servicio de mensajería alertas reloj confiable ntp 10 5 casos de uso prioritarios cu nombre actor flujo feliz excepciones au 01 registrar administrador datos válidos email email repetido usuario activación contraseña débil au 02 login con usuario final credenciales correctas usuario bloqueado mfa totp jwt totp incorrecto au 03 asignar rol administrador vincula rol acl rol inexistente cache refresh au 04 forzar logout seguridad blacklist tokens sesión ya expirada global inválidos 6 flujo principal au 02 usuario auth login email pass sistema verifica hash estado mfa enabled si requiere mfa auth verify totp usuario ingresar código sistema valida emite tokens access refresh registra evento login success en audit log 7 interfaz de usuario 6 pantallas pantalla propósito navegación principal 1 login captura credenciales básicas entrada pública login 2 verificación ingreso de código totp redirigida desde login mfa si mfa enabled 3 mi perfil ver editar datos y cambiar dropdown usuario profile contraseña 4 gestión de datagrid crud bulk actions menú seguridad users usuarios filtro por rol estado 5 roles editor jerárquico rol roles permisos permisos clonación 6 bitácora de búsqueda filtros tipo evento audit log seguridad ip fecha export csv 4 2 catálogos maestros cats 1 objetivo eliminar valores hard coded y permitir que las listas de referencia evolucionen sin despliegues 11 2 funcionalidades mantenimiento crud de provincias organismos tipos de programa tipos de prestación frecuencias de medición importador masivo csv xlsx con mapeo dinámico de columnas y pre visualización soft delete con restauración y trazabilidad deleted at validaciones de unicidad relaciones y reglas de negocio p ej código iso 3166 2 para provincias buscador ajax con filtros activo ambito etc 3 componentes internos componente epics cubiertos catalog api endpoints rest graphql paginación sorting bulk importer parseo validación carga transaccional rollback catalog ui datagrid editable notificaciones en tiempo real 4 dependencias auth rol admin base de datos relacional 5 casos de uso prioritarios cu descripción actor flujo feliz excepciones c 01 crear provincia admin post provincias 201 código iso duplicado c 02 importar admin subir csv preview csv mal formado organismos confirmar c 03 deshabilitar tipo admin patch activo false prestaciones activas prestación referencian tipo 6 flujo bulk import c 02 admin ui import sube csv sistema parse csv valida fila a fila errores se muestran en preview con línea y motivo admin confirma carga sistema inicia transacción insert batch si error rollback completo registra resumen ok errores y envía notificación 7 interfaz de usuario 5 pantallas pantalla propósito navegación 1 panel de selector de tipo catálogo cards catalogs catálogos 2 listado visualizar registros búsqueda catalogs tipo datagrid instantánea paginación 12 3 formulario alta edición con validación en línea modal crud o catalogs tipo new 4 histórico ítems deshabilitados opción restaurar tab secundario en papelera listado 5 wizard paso 1 subir archivo paso 2 mapping catalogs tipo import importador paso 3 preview confirmar 4 3 programas prog 1 objetivo consolidar la descripción formal de programas públicos y sus prestaciones para posterior monitoreo y evaluación 2 funcionalidades wizard 4 pasos con guardado parcial y validaciones dependientes control de estados borrador revisión activo cerrado módulo de prestaciones 1 n con tipo población objetivo y unidad de medida historial detallado programa hist con diffs campo a campo buscador con filtros combinados tipo organismo estado provincia 3 componentes internos componente descripción wizard manager orquesta pasos y persiste parcialmente localstorage bd prestación service crud validación contra catálogos lifecycle controller cambios de estado y reglas de transición history tracker trigger que guarda json diff en programa hist 4 dependencias cats auth ind para validez de indicadores 5 casos de uso prioritarios cu nombre actor flujo feliz excepciones p 01 crear programa coordinador completa wizard falta metas borrador p 02 aprobar superadmin patch activo indicadores programa incompletos p 03 cerrar coordinador bloquea ediciones prestaciones activas programa 6 flujo p 01 wizard 4 pasos paso 1 datos generales nombre objetivo tipo organismo provincia 13 paso 2 añadir prestaciones tabla inline validación poblac 0 paso 3 vincular indicadores disponibles según tipo programa paso 4 resumen validaciones cruzadas guardar estado borrador notifica via websockets a indicadores para crear plantillas serie 7 interfaz de usuario 8 pantallas pantalla propósito navegación 1 lista vista tabla filtros programs programas estado organismo tipo campos personalizados via columnas dinámicas 2 wizard paso datos generales programs new step 1 1 sección campos extra inputs renderizados dinámicamente 3 wizard paso prestaciones tabla inline step 2 2 4 wizard paso vinculación de indicadores step 3 3 selector múltiple 5 wizard paso revisión incluye diff step 4 4 de campos extra confirmación 6 detalle tabs general programs id programa prestaciones indicadores historial campos extra 7 prestaciones crud prestaciones sub tab prestaciones manager 8 historial de diff visual antes después tab historial cambios muestra cambios en metadata eav 9 gestión de crud definiciones menú configuración programs custom fields campos programa field def tipo de personalizados dato orden 10 asignar vista de mantenimiento programs custom values valores extra masivo filas programas columnas extra edición rápida tipo hoja de cálculo cambios clave en ui el wizard paso 1 detecta definiciones en programa field def y genera inputs text number date checkbox 14 lista programas permite al usuario elegir mostrar u ocultar columnas de campos extra persistido en localstorage en detalle programa el tab campos extra muestra valores y ofrece botón editar si el rol tiene permiso gestión de campos personalizados requiere rol admin o designer al crear un nuevo campo se actualiza schema cache y se emite evento custom field created para que la spa recargue formularios sin refrescar flujo para crear nueva variable campo personalizado admin pantalla gestión de campos nuevo campo sistema valida slug único tipo válido insert programa field def spa emite evento wizard y detalle recargan definiciones coordinador edita programa nuevo input visible guardar api inserta actualiza programa field val o metadata jsonb historial registra cambio y si procede widget dashboard se marca para recálculo pantalla vista propósito qué muestra o permite ruta navegación 1 lista tabla de programas con filtros por programs programas estado organismo tipo y búsqueda rápida 2 wizard paso ingreso de datos generales del programs new step 1 1 programa nombre tipo organismo provincia etc 3 wizard paso gestión de prestaciones tabla programs new step 2 2 inline altas ediciones 4 wizard paso vinculación múltiple de indicadores programs new step 3 3 y definición de línea base metas 5 wizard paso revisión integral y confirmación del programs new step 4 4 programa antes de guardar 6 detalle ficha con pestañas general programs id programa prestaciones indicadores historial 7 prestaciones crud de prestaciones específicas sub tab dentro de manager del programa sub pestaña en programs id detalle 8 historial de vista diff antes después de cada pestaña historial dentro de cambios versión del programa programs id 4 4 matriz de indicadores ind 1 objetivo definir indicadores estandarizados establecer metas y capturar series temporales de alta calidad para monitoreo 15 2 funcionalidades crud de indicadores con metadatos fórmula unidad fuente importador excel para carga inicial vinculación n m indicador programa con línea base y meta ingesta masiva de series json csv y validación de calidad de datos motor de alertas meta incumplida valores outlier con notificación 3 componentes internos componente responsabilidad indicator catalog alta edición búsqueda full text series ingest api masiva validación por reglas quality engine reglas rango monotonicidad missing gaps alert dispatcher genera y envía alertas email in app 4 dependencias programas fk cats data warehouse padrones 5 casos de uso prioritarios cu nombre actor flujo feliz excepciones i 01 vincular indicador operador post vincular duplicado i 02 cargar serie operador post lote ok outliers i 03 alerta meta sistema job nightly email 6 flujo i 02 operador sube json lote quality engine rango consistencia registra fallas en tabla errores inserta valores válidos en partición por año publica evento serie cargada a reportes 7 interfaz de usuario 7 pantallas pantalla propósito navegación 1 catálogo datagrid búsqueda full text indicators indicadores 2 formulario alta edición metadatos modal o indicators new indicador 3 importador excel wizard 3 pasos upload mapping indicators import confirm 4 vincular a dialog con multiselect metas botón vincular en programa programa 5 series datagrid valores por fecha inline edit indicators id series 6 carga masiva wizard csv json resumen series import series 16 7 panel alertas tarjetas por severidad filtro por alerts meta incumplida 4 5 evaluación agenda de mejoras eval 1 objetivo planificar estudios de evaluación registrar hallazgos y coordinar acciones de mejora hasta su cierre 2 funcionalidades calendario y ficha de evaluación tipo alcance metodología registro de hallazgos y recomendaciones vinculadas a indicadores kanban pendiente en curso cerrada con responsable y fechas kpis de implementación porcentaje cierre tiempo medio generador de informe pdf con gráfica de avance 3 componentes internos componente descripción evaluation planner crud evaluaciones cronograma gantt findings registry abm hallazgos adjuntos descriptivos improvement kanban cambio de estado drag drop sla reporting engine consolida kpis y exporta informe 4 dependencias programas indicadores auth 5 casos de uso prioritarios cu nombre actor flujo feliz excepciones e 01 crear evaluación evaluador post planificada duplicado e 02 añadir recomendación evaluador post rec eval cerrada e 03 cerrar acción responsable patch cerrada fecha hoy 6 flujo kanban e 03 tarjeta pendiente en curso evidencia adjunta responsable marca cerrada fecha compromiso sistema recalcula kpi cierre y notifica coordinador 7 interfaz de usuario 6 pantallas pantalla propósito navegación 1 calendario evaluaciones vista calendar tarjetas por evaluations calendar estado 17 2 ficha evaluación tabs datos equipo evaluations id resultados 3 hallazgos lista tipo checklist adjuntos tab hallazgos en recomendaciones ficha 4 kanban acciones columnas pendiente en curso actions board cerrada 5 dashboard kpis cierre días promedio actions kpi heatmap 6 informe pdf preview render html pdf antes de evaluations id report exportar 4 6 reportes dashboards rep 1 objetivo convertir datos del sime en información visual y accionable mediante reportes y tableros interactivos 2 funcionalidades report builder con editor sql y plantillas pre definidas dashboard designer drag and drop gráficos tarjetas kpi tablas scheduler de reportes cron eventos con exportaciones pdf xlsx control de permisos por rol y embed tokens para bi externo historial de ejecuciones tiempos y destinatarios 3 componentes internos componente responsabilidad dashboard designer layout grid guardado persistente report scheduler job runner generación y mailing widget library gráficos tablas kpi mapas embed gateway tokeniza urls para bi corporativo 4 dependencias indicadores evaluación auth object storage archivos 5 casos de uso prioritarios cu nombre actor flujo feliz excepciones r 01 crear dashboard designer post dashboard sql inválido r 02 programar reporte operador post programación timeout r 03 compartir dashboard coordinador post permiso permiso duplicado 6 flujo r 02 scheduler usuario define cron filtros formato 18 scheduler registra job cron al ejecutar consulta bd genera pdf almacena en object storage genera link firmado envía email a destinatarios registra audit log 7 interfaz de usuario 8 pantallas pantalla propósito navegación 1 lista dashboards tarjetas búsqueda por tag dashboards 2 dashboard designer drag and drop grid widget dashboards new library 3 widget library panel lateral gráfico kpi tabla dentro de designer 4 reporte programado cron filtros formato destinos reports schedule wizard 5 historial ejecuciones tabla estado tiempo archivo reports history 6 dashboard viewer modo lectura filtros dinámicos dashboards id 7 sharing permisos modal roles permisos botón compartir view edit 8 embed config genera token embed ejemplo dashboards id embed iframe 19 5 modelo de datos ddl completo convenciones nombres en minúsculas snake case pk serial o char 2 según caso todas las tablas llevan created at timestamptz default now y cuando procede updated at timestamptz y activo boolean default true fk con on update cascade y on delete restrict salvo que se indique otro comportamiento 5 1 módulo identidad roles usuarios create table usuario usuario id serial primary key email varchar 120 unique not null password hash varchar 255 not null first name varchar 60 last name varchar 60 mfa enabled boolean default false mfa secret varchar 64 status varchar 20 default active active suspended deleted last login at timestamptz created at timestamptz default now updated at timestamptz roles y permisos create table rol rol id serial primary key nombre varchar 50 unique not null descripcion text created at timestamptz default now create table permiso permiso id serial primary key recurso varchar 50 not null accion varchar 20 not null create read update delete export descripcion text unique recurso accion create table rol permiso rol id int references rol on delete cascade permiso id int references permiso on delete cascade primary key rol id permiso id 20 create table usuario rol usuario id int references usuario on delete cascade rol id int references rol on delete restrict primary key usuario id rol id token blacklist revocados create table token blacklist jti varchar 36 primary key usuario id int references usuario on delete cascade exp timestamptz not null revoked at timestamptz default now bitácora de auditoría create table audit log audit id bigserial primary key usuario id int references usuario on delete set null evento varchar 50 ip inet user agent text fecha timestamptz default now metadata jsonb partition by range fecha ejemplo partición mensual create table audit log 2025 06 partition of audit log for values from 2025 06 01 to 2025 07 01 5 2 catálogos maestros create table provincia prov id char 2 primary key nombre varchar 60 not null unique region varchar 30 activo boolean default true created at timestamptz default now updated at timestamptz create table organismo org id serial primary key sigla varchar 15 unique not null nombre varchar 120 not null ambito varchar 20 check ambito in nacional provincial municipal activo boolean default true created at timestamptz default now create table tipo programa tipo prog id serial primary key codigo varchar 20 unique not null descripcion text activo boolean default true 21 created at timestamptz default now updated at timestamptz create table tipo prestacion tipo pres id serial primary key codigo varchar 20 unique not null descripcion text activo boolean default true created at timestamptz default now create table frecuencia medicion freq id serial primary key codigo varchar 15 unique not null mensual trimestral descripcion text meses smallint not null activo boolean default true created at timestamptz default now 5 3 programas y prestaciones novedad se admite que usuarios con rol adecuado puedan crear campos personalizados extra columns para el programa sin modificar el esquema físico se implementa un modelo híbrido que combina columnas estándar y metadatos jsonb tablas eav para consultas estructuradas cuando sea necesario 5 3 1 esquema estándar programa create table programa programa id serial primary key nombre varchar 120 not null objetivo text tipo prog id int references tipo programa on update cascade org id int references organismo prov id char 2 references provincia estado varchar 20 default borrador borrador activo cerrado fecha alta date default current date metadata jsonb default jsonb campos libres definidos por usuario created by int references usuario created at timestamptz default now updated at timestamptz 5 3 2 diseño de campos personalizados eav opcional catálogo de campos dinámicos create table programa field def field id serial primary key nombre varchar 60 unique not null slug etiqueta varchar 120 not null display label 22 tipo dato varchar 15 check tipo dato in text int numeric date bool creado por int references usuario created at timestamptz default now valores asignados create table programa field val programa id int references programa on delete cascade field id int references programa field def on delete cascade valor text text valor int int valor num numeric valor date date valor bool boolean updated at timestamptz default now primary key programa id field id regla de integridad según tipo dato solo se permite un campo valor no nulo se valida mediante check o lógica de aplicación 5 3 3 flujo de creación de campo 1 usuario con rol admin o designer navega a gestión de campos personalizados 2 define nombre slug etiqueta tipo dato 3 sistema inserta en programa field def y actualiza cache de definición 4 las pantallas wizard programa y detalle renderizan automáticamente input según tipo 5 3 4 ventajas del modelo híbrido flexibilidad metadata jsonb para consultas ad hoc eav para campos reportables sin migraciones no requiere alter table al agregar campo indexes selectivos se pueden crear índices gin sobre metadata o btree sobre columnas de programa field val para análisis específicos programa create table programa programa id serial primary key nombre varchar 120 not null objetivo text tipo prog id int references tipo programa on update cascade org id int references organismo prov id char 2 references provincia estado varchar 20 default borrador borrador activo cerrado fecha alta date default current date created by int references usuario created at timestamptz default now 23 updated at timestamptz historial de cambios create table programa hist hist id bigserial primary key programa id int references programa on delete cascade version int not null diff jsonb field old new changed by int references usuario changed at timestamptz default now prestaciones create table prestacion prestacion id serial primary key programa id int references programa on delete cascade tipo pres id int references tipo prestacion descripcion text not null poblacion obj numeric unidad medida varchar 50 activo boolean default true created at timestamptz default now updated at timestamptz 5 4 indicadores y series indicador create table indicador indicador id serial primary key codigo varchar 30 unique not null nombre text not null descripcion text formula text unidad varchar 50 fuente varchar 120 created at timestamptz default now vinculación indicador programa create table indicador programa programa id int references programa on delete cascade indicador id int references indicador linea base numeric meta numeric freq id int references frecuencia medicion created at timestamptz default now primary key programa id indicador id series temporales create table serie indicador 24 serie id bigserial primary key programa id int indicador id int fecha date not null valor numeric quality flag varchar 20 default ok ok outlier missing cargado por int references usuario inserted at timestamptz default now constraint fk ip foreign key programa id indicador id references indicador programa programa id indicador id on delete cascade partition by range fecha ejemplo sub partición create table serie indicador 2025 partition of serie indicador for values from 2025 01 01 to 2026 01 01 registro de errores en carga create table serie error error id bigserial primary key archivo ref varchar 120 linea int motivo text payload jsonb usuario id int references usuario created at timestamptz default now 5 5 evaluaciones y mejoras evaluaciones create table evaluacion evaluacion id serial primary key programa id int references programa on delete cascade tipo varchar 50 alcance text metodologia text fecha inicio date fecha fin date estado varchar 20 default planificada planificada en curso cerrada created by int references usuario created at timestamptz default now create table recomendacion recomendacion id serial primary key evaluacion id int references evaluacion on delete cascade descripcion text not null prioridad varchar 10 check prioridad in alta media baja created by int references usuario created at timestamptz default now create table mejora seguimiento mejora id serial primary key 25 recomendacion id int references recomendacion on delete cascade responsable id int references usuario estado varchar 20 default pendiente pendiente en curso cerrada fecha compromiso date fecha cierre date evidencia url text updated at timestamptz 5 6 reportes y dashboards definición de reporte create table report def reporte id serial primary key nombre varchar 120 not null descripcion text tipo varchar 20 check tipo in sql view external fuente query text formato def jsonb columnas estilos creado por int references usuario created at timestamptz default now updated at timestamptz create table programacion reporte prog id serial primary key reporte id int references report def on delete cascade cron exp varchar 60 not null formato salida varchar 10 check formato salida in pdf xlsx destinatarios text activo boolean default true created at timestamptz default now create table report execution exec id bigserial primary key prog id int references programacion reporte on delete cascade estado varchar 20 check estado in ok error timeout inicio at timestamptz fin at timestamptz archivo url text filas int mensaje text dashboards widgets create table dashboard dashboard id serial primary key nombre varchar 120 not null descripcion text owner id int references usuario is public boolean default false created at timestamptz default now 26 updated at timestamptz create table widget widget id serial primary key dashboard id int references dashboard on delete cascade tipo varchar 20 check tipo in chart kpi table map config jsonb posicion int created at timestamptz default now create table dashboard permiso dashboard id int references dashboard on delete cascade rol id int references rol on delete cascade permiso varchar 10 check permiso in view edit primary key dashboard id rol id permiso 5 7 índices vistas y otros artefactos índices recomendados create index idx indicador codigo on indicador codigo create index idx serie programa fecha on serie indicador programa id fecha desc create index idx mejora estado on mejora seguimiento estado create index idx report exec estado on report execution estado vista materializada kpi avance mejoras create materialized view mv kpi mejoras as select p programa id count filter where ms estado cerrada as acciones cerradas count as acciones totales round count filter where ms estado cerrada numeric 100 nullif count 0 2 as avance pct from programa p join prestacion pr using programa id join indicador programa ip using programa id join evaluacion e using programa id join recomendacion r using evaluacion id join mejora seguimiento ms using recomendacion id group by p programa id nota este ddl cubre todos los contextos descritos en la arquitectura identidad catálogos programas indicadores evaluaciones reportes dashboards 27 incluyendo tablas auxiliares para auditoría y ejecución de reportes 28 6 api rest v1 la api sime sigue el estándar openapi 3 1 y separa responsabilidades mediante tags que reflejan nuestros módulos a continuación se documentan los recursos principales su propósito funcional parámetros códigos de estado y ejemplos convenciones generales formato base url https api sime gob api v1 todas las rutas devuelven application json salvo descargas autorización mediante esquema de seguridad bearerauth jwt errores siguen el formato rfc 7807 problem details 6 1 esquema de seguridad nombre tipo encabezado descripción bearerauth http bearer authorization bearer token jwt firmado expiración token 30 min 6 2 tags disponibles tag módulo descripción auth identidad roles endpoints de autenticación y gestión de usuarios catálogos catálogos maestros provincias organismos etc programas programas crud y flujo de programas indicadores matriz de indicadores indicadores series y alertas evaluaciones evaluación mejoras estudios hallazgos acciones reportes reportes gest o de dashboards y scheduler dashboards 6 3 endpoints clave a continuación se listan los recursos núcleo por tag con descripciones profesionales y fáciles de entender 6 3 1 auth métod ruta descripción respuestas ejemplo éxito o post auth login inicia sesión y 200 jwt curl d devuelve par de 401 credenciales email user pas sword tokens inválidas 29 post auth refresh obtiene 200 nuevo par nuevo access token a 401 refresh partir de refresh expirado get auth profile devuelve datos del 200 perfil json usuario autenticado post auth logout revoca tokens 204 sin contenido actuales 6 3 2 catálogos método ruta descripción parámetros respuestas get provincias lista provincias activo bool 200 array paginado opcional activo query post provincias crea provincia body provincia 201 creada 409 duplicado patch provincias prov id actualiza path prov id 200 ok 404 no existe parcial body campos delete provincias prov id soft delete path 204 activo false los mismos verbos se aplican a organismos tipos programa etc 6 3 3 programas método ruta descripción respuestas get programas filtrado por estado tipo 200 paginado organismo post programas crea programa paso 1 wizard 201 borrador put programas id actualiza campos incluye 200 pasos 2 3 patch programas id estado cambia estado activo cerrado 200 ok 422 violación reglas get programas id historial lista versiones programa hist 200 array 6 3 4 indicadores método ruta descripción get indicadores búsqueda de indicadores mediante texto libre nombre código fórmula etc post indicadores alta de un nuevo indicador en el catálogo maestro post indicadores id vincular relaciona el indicador con un programa y le asigna línea base meta post series import importa un lote de series de valores json o csv para uno o varios indicadores get series programa id indicador id consulta una serie filtrada por programa e indicador 30 get alertas devuelve alertas activas metas incumplidas valores atípicos 6 3 5 evaluaciones método ruta descripción get evaluaciones lista las evaluaciones existentes con filtros por programa estado o fecha post evaluaciones registra una nueva evaluación planificada o en curso post evaluaciones id recomendaciones agrega una recomendación vinculada a la evaluación patch mejoras id actualiza el estado de una acción de mejora pendiente en curso cerrada 6 3 6 reportes dashboards método ruta descripción get dashboards devuelve los dashboards accesibles para el usuario autenticado post dashboards crea un nuevo dashboard y lo devuelve con su id get dashboards id recupera un dashboard específico junto con sus widgets post reports schedule programa la ejecución periódica de un reporte cron formato destinatarios get reports history lista el historial de ejecuciones de reportes estado duración enlace al archivo 6 4 componentes schemas a continuación se listan todos los modelos de dominio expuestos en la especificación openapi v1 con sus campos más relevantes los atributos de auditoría created at updated at etc se omiten para claridad adjunto archivo openapi yaml componente campos esenciales tipo credenciales email string password string tokenpair access token string refresh token string expires in int problem type uri title string status int detail string instance uri provincia prov id char 2 nombre string region string activo bool paginatedprovincia items array provincia total int page int size int organismo org id int sigla string nombre string ambito string activo bool tipoprograma tipo prog id int codigo string descripcion string activo bool programa programa id int nombre string objetivo string estado string tipo prog id int org id int prov id char 2 metadata object prestacion prestacion id int programa id int tipo pres id int descripcion string poblacion obj number indicador indicador id int codigo string nombre string formula string unidad string 31 serie serie id int programa id int indicador id int fecha date valor number quality flag string alerta alerta id int programa id int indicador id int tipo string descripcion string evaluacion evaluacion id int programa id int tipo string estado string fecha inicio date fecha fin date recomendacion recomendacion id int evaluacion id int descripcion string prioridad string mejora mejora id int recomendacion id int estado string responsable id int dashboard dashboard id int nombre string descripcion string is public bool widget widget id int dashboard id int tipo string config object reportdef reporte id int nombre string tipo string fuente query string reportschedule prog id int reporte id int cron exp string formato salida string reportexecution exec id int prog id int estado string archivo url string inicio at datetime los esquemas expuestos cubren todos los módulos auth catálogos programas indicadores evaluaciones reportes dashboards campos adicionales de auditoría y paginado siguen las convenciones descritas en la sección de ddl y api 6 5 respuestas genéricas código significado objeto 200 éxito devuelve recurso o lista modelo correspondiente 201 creación exitosa objeto creado 204 operación exitosa sin cuerpo 400 petición malformada problem 401 sin autenticación problem 403 sin permisos problem 404 recurso no encontrado problem 409 conflicto duplicado referencial problem 422 violación de reglas de negocio problem 32 6 6 versionado y compatibilidad prefijo v1 indica versión mayor evoluciones menores se indican con encabezado api version y semver rutas siguen patrón rest cambios breaking nueva versión v2 nota el archivo completo openapi yaml 1573 lineas incluye seguridad parámetros reutilizables y esquema problem rfc 7807 crud para provincias organismos tipos programa programas indicadores evaluaciones recomendaciones mejoras de dashboards widgets reportes y programaciones endpoints adicionales importación de series y alertas para compartir con dashboards esquemas evaluación recomendación mejora dashboard widget reportdef reportschedule 33 7 diagramas de flujo secuencia contiene ocho diagramas de secuencia que cubren 1 login mfa auth 2 alta de programa wizard 3 creación de campo personalizado 4 carga masiva de series 5 generación de alerta de meta 6 ciclo evaluación recomendación cierre acción 7 creación y compartición de dashboard 8 scheduler de reporte programado cada diagrama muestra actores fe servicios bd y sistemas externos reflejando el 100 de los flujos críticos definidos 7 1 login con mfa auth sequencediagram actor usuario participant fe as front end participant auth as authsvc participant db as postgresql usuario fe completa email password fe auth post auth login auth db select usuario hash mfa enabled alt credenciales válidas y mfa activo auth fe http 401 mfa required usuario fe ingresa código totp fe auth post auth verify totp auth db validar totp auth fe 200 tokenpair else credenciales válidas sin mfa auth fe 200 tokenpair else error auth fe 401 end auth db insert audit log login 7 2 alta de programa wizard 4 pasos sequencediagram participant c as coordinador fe participant prog as progsvc participant db as postgresql c prog post programas paso 1 prog db insert programa borrador c prog put prestaciones paso 2 prog db insert prestacion c prog put indicadores paso 3 34 prog db insert indicador programa c prog patch programas id estado activo paso 4 prog db update programa prog c 200 ok event programa aprobado 7 3 creación de campo personalizado sequencediagram participant admin as admin fe participant prog as progsvc participant db as postgresql admin prog post programs custom fields slug label tipo prog db insert programa field def prog admin 201 created event custom field created fe fe recarga cache definiciones wizard muestra nuevo input 7 4 carga masiva de series sequencediagram participant oper as operador fe participant ind as indsvc participant db as postgresql oper ind post series import json lote loop por cada registro ind ind validar reglas rango dtype alt ok ind db insert serie indicador partition else error ind db insert serie error end end ind oper 202 accepted resumen insertados errores ind ind publicar evento serie cargada 7 5 generación de alerta de meta incumplida sequencediagram participant cron as job nocturno participant ind as indsvc participant db as postgresql cron db select series vs meta alt meta valor actual ind db insert alerta ind notif send email in app end 7 6 proceso de evaluación y cierre de acción sequencediagram participant eval as evaluador fe participant e as evalsvc participant db as postgresql eval e post evaluaciones e db insert evaluacion planificada 35 eval e post evaluaciones id recomendaciones e db insert recomendacion responsable e patch mejoras id estado cerrada evidencias e db update mejora seguimiento e db update kpi materializado 7 7 creación y compartición de dashboard sequencediagram participant des as designer fe participant rep as repsvc participant db as postgresql des rep post dashboards layout rep db insert dashboard widgets des rep post dashboards id share rol id permiso rep db insert dashboard permiso rep des 200 ok link compartido 7 8 scheduler de reporte programado sequencediagram participant oper as operador fe participant rep as repsvc participant db as postgresql participant obj as minio oper rep post reports schedule cron formato rep db insert programacion reporte cron rep trigger job según cron rep db select fuente query db rep resultset rep obj put reporte pdf xlsx rep smtp email link firmado rep db insert report execution estado ok cada diagrama refleja el flujo end to end de los procesos descritos en el modelo funcional incluyendo participantes front end servicios lógicos base de datos y sistemas externos almacenamiento de objetos smtp integran todos los módulos auth catálogos programas indicadores evaluación reportes 36 37 8 seguridad auditoría cumplimiento cobertura 360 alineado a buenas prácticas devsecops y regulaciones vigentes 8 1 autenticación y gestión de identidades control implementación recomendaciones adicionales jwt rs256 expiración 30 min refresh emitir jti único y almacenarlo token 7 días en token blacklistpara revocaciones mfa totp obligatoria para habilitar notificaciones push roles admin y superadmin opt in webauthn en próxima versión para el resto política de longitud 12 complejidad owasp forzar rotación cada 180 días contraseña historial 5 últimas sso futuro keycloak saml2 compatible mapear grupos ldap roles rbac 8 2 autorización y control de acceso rbac gestionado en rol permiso decisiones cacheadas en redis ttl 60 s principio de menor privilegio roles predefinidos posibilidad de custom roles auditados acceso de servicio a bd mediante cuentas dedicadas con least privileges 8 3 cifrado y protección de datos ámbito tecnología detalle en tránsito tls 1 3 letsencrypt hsts perfect forward secrecy deshabilitar tls 1 0 1 1 en reposo discos luks en nodos claves gestionadas vía luks2 productivos passphrase hsm columnas pgcrypto aes gcm 256 e mail mfa secret evidencia urls sensibles object storage sse s3 aes 256 rotación anual de keys 8 4 monitorización logging y auditoría tabla audit log con particionado mensual campos evento ip user agent metadata jsonb forwarding en tiempo real a graylog elastic siem con retención 365 días dashboards de seguridad logins fallidos cambios de rol uso de tokens alertas automáticas correo slack ante patrones sospechosos 5 fallos de login hora por ip 38 8 5 respaldo y recuperación ante desastre capa estrategia frecuencia retención base de datos continuous wal 5 min 35 días en s3 object lock shipping legal hold snapshot full pg dump format directory diaria 02 00 7 días object storage versión habilitada inmediata 30 días config k8s gitops argocd cada 90 días manifests backup repos commit pruebas restauración quarterly a entorno staging dr rpo 5 min rto 2 h 8 6 devsecops y gestión de vulnerabilidades fase herramienta cobertura ci sast semgrep dependency check pr gate bloquea cve high owasp cd trivy container scan escaneo imagen antes de push a registry runtime falco opa gatekeeper detección de anomalías policy enforcement pentest externo anual retest owasp top 10 api security top 10 8 7 cumplimiento legal privacidad pdpa argentina ley 25 326 registro de base de datos personales ante aaip políticas de derechos arco gdpr art 30 registro de actividades art 32 medidas técnicas y organizativas soporte para dsar data subject access request export json logs de tracking excluyen datos sensibles minimización retención datos personales eliminados anonimizados a los 5 años post cierre de programa conclusión con estos controles sime cumple las normativas locales e internacionales aplica prácticas devsecops y mantiene un nivel de riesgo residual aceptable sujeto a revisión continua por la oficina de seguridad de la información 39 final gracias por su confianza junio de 2025 renzo antonioli analista funcional técnico dev rantonioli zeron com ar 549 11 3566 5266 40